    def NumberOf1(self, n):
        # write code here
        count = 0
        if n < 0:
            n = n & 0xffffffff
        while n:
            count += 1
            n = n & (n-1)
        return count

   1.首先判断n是不是负数，因为计算机中的负数是用补码表示的，最高位是符号位1，如果不对负数进行处理的话，
   用while会进入死循环，（我的理解是在进行移位运算时，
   符号位1不会变，也就是这个符号位一直是1，不会变成零），要与0xffffffff进行按位与运算，来消除这种影响。
   （至于为什么，我也没搞懂………………）
   
   2，也就是说，把一个整数减去1，再和原整数做与运算，会把该整数最右边一个1变成0。那么可以进行多少次这样的操作，
   一个整数的二进制就有多少个1
