解题思路

下面的讨论中 x 代表 base，n 代表 exponent。



 

因为 (x*x)n/2 可以通过递归求解，并且每次递归 n 都减小一半，因此整个算法的时间复杂度为 O(logN)。

def dfs(x,n):
  if n==0:
    return 1
  if n==1:
    return x
  if n%2==0:
    return dfs(x*x,n//2)
  else:
    return x*dfs(x*x,n//2)
